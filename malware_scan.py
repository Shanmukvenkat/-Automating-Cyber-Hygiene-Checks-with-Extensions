import os
import logging

# Folders to exclude from scanning
EXCLUDED_FOLDERS = [
    r"C:\Windows",
    r"C:\Program Files",
    r"C:\Program Files (x86)",
    r"C:\ProgramData",
    r"C:\Users\Default",
]

def is_path_excluded(path):
    """Check if the path is excluded from scanning."""
    for excl in EXCLUDED_FOLDERS:
        if path.startswith(excl):
            return True
    return False

def malware_scan(directory_to_scan):
    """
    Scans the specified directory for malware or suspicious files.
    :param directory_to_scan: Directory path to scan.
    :return: Dictionary containing lists of malicious and suspicious files.
    """
    logging.info(f"Scanning directory for malware: {directory_to_scan}")
    malicious_files = []
    suspicious_files = []

    try:
        # Calculate total files for progress tracking
        total_files = sum(len(files) for _, _, files in os.walk(directory_to_scan))
        scanned_files = 0

        for root, _, files in os.walk(directory_to_scan):
            if is_path_excluded(root):
                scanned_files += len(files)  # Skip excluded folders
                continue
            for file in files:
                file_path = os.path.join(root, file)

                # Detection logic
                if "malware" in file.lower():
                    malicious_files.append(file_path)
                elif "suspicious" in file.lower():
                    suspicious_files.append(file_path)
                else:
                    # Flag executables only if outside common folders
                    if file.lower().endswith(('.exe', '.bat', '.vbs', '.ps1', '.dll')):
                        suspicious_files.append(file_path)

                # Update progress
                scanned_files += 1
                if scanned_files % 100 == 0 or scanned_files == total_files:
                    print(f"Scanned {scanned_files}/{total_files} files...")

    except Exception as e:
        logging.error(f"Error scanning directory: {e}")

    if malicious_files or suspicious_files:
        logging.warning(f"Malware found! {len(malicious_files)} malicious and {len(suspicious_files)} suspicious files detected.")
    else:
        logging.info("No malware detected.")

    return {
        "malicious": malicious_files,
        "suspicious": suspicious_files
    }

# Example usage
if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO, format="%(asctime)s - %(levelname)s - %(message)s")
    directory_to_scan = input("Enter the directory to scan (e.g., C:\\): ").strip()
    results = malware_scan(directory_to_scan)
    print("\nScan Complete!")
    print(f"Malicious Files: {results['malicious']}")
    print(f"Suspicious Files: {results['suspicious']}")
